### Preseed for Ubuntu 17.04
# Derived from: https://help.ubuntu.com/lts/installation-guide/example-preseed.txt

### Compatibility
# Tested with the netboot image:
# http://archive.ubuntu.com/ubuntu/dists/zesty/main/installer-amd64/current/images/netboot/mini.iso
# Might work with the regular image:
# http://releases.ubuntu.com/17.04/ubuntu-17.04-server-amd64.iso

### Usage
# We recommend to use the build-iso.sh script to build an image with embedded
# preseed file. In that case the preseed file gets loaded automatically.
#
# In case you want to use a vanilla ISO image, please use the following boot
# instructions to load the preseed file (press ESC and enter in boot prompt):
#
# install auto url=https://raw.githubusercontent.com/core-process/linux-unattended-installation/master/ubuntu/17.04/preseed.cfg
# or:
# install auto=true priority=critical preseed/url=https://raw.githubusercontent.com/core-process/linux-unattended-installation/master/ubuntu/17.04/preseed.cfg

### Localization
d-i debian-installer/locale string en_US.UTF-8
d-i localechooser/supported-locales multiselect en_US.UTF-8, de_DE.UTF-8
d-i console-setup/ask_detect boolean false
d-i keyboard-configuration/xkb-keymap select us

### Network configuration
d-i netcfg/choose_interface select auto
d-i netcfg/hostname string device
d-i netcfg/get_hostname string device
d-i netcfg/get_domain string unnamed
d-i hw-detect/load_firmware boolean true

### Mirror settings
d-i mirror/country string manual
d-i mirror/http/hostname string archive.ubuntu.com
d-i mirror/http/directory string /ubuntu
d-i mirror/http/proxy string

### Account setup
# generate a password with `printf "please-change-password" | mkpasswd -s -m sha-512`
d-i passwd/root-login boolean true
#d-i passwd/root-password-crypted password $6$00RVDflOFgxkv//$FcEiZUqdxVXBhRYPmyBryOevE2fsMmu6XX7DURirhFngzB8dVVhlBTwo3yjt.u8UU8Kgfv6OIddtJFAcrnb0H0
d-i passwd/make-user boolean false

### Clock and time zone setup
d-i clock-setup/utc boolean true
d-i time/zone string Etc/UTC
d-i clock-setup/ntp boolean true
d-i clock-setup/ntp-server string ntp.ubuntu.com

### Partitioning
d-i preseed/early_command string umount /media || true
d-i partman-auto/method string lvm
d-i partman-auto-lvm/guided_size string max
d-i partman-lvm/device_remove_lvm boolean true
d-i partman-lvm/confirm boolean true
d-i partman-lvm/confirm_nooverwrite boolean true
d-i partman-auto-lvm/new_vg_name string main
d-i partman-md/device_remove_md boolean true
d-i partman-md/confirm boolean true
d-i partman-partitioning/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true
d-i partman-basicmethods/method_only boolean false

### Disk layout

# Keep 25% free space
d-i partman-auto/expert_recipe string         \
  boot-root ::                                \
    512 512 512 ext4                          \
      $primary{ }                             \
      $bootable{ }                            \
      method{ format } format{ }              \
      use_filesystem{ } filesystem{ ext4 }    \
      mountpoint{ /boot }                     \
    .                                         \
    1024 102400000 1000000000 ext4            \
      $lvmok{ }                               \
      method{ format } format{ }              \
      use_filesystem{ } filesystem{ ext4 }    \
      mountpoint{ / }                         \
      lv_name{ root }                         \
    .                                         \
    256 25600000 1000000000 ext4              \
      $lvmok{ }                               \
      method{ keep }                          \
      lv_name{ placeholder }                  \
    .                                         \
    200% 200% 200% linux-swap                 \
      $lvmok{ }                               \
      method{ swap } format{ }                \
      lv_name{ swap }                         \
    .
# EOR

# Use entire disk
#d-i partman-auto/expert_recipe string         \
#  boot-root ::                                \
#    512 512 512 ext4                          \
#      $primary{ }                             \
#      $bootable{ }                            \
#      method{ format } format{ }              \
#      use_filesystem{ } filesystem{ ext4 }    \
#      mountpoint{ /boot }                     \
#    .                                         \
#    1024 102400000 1000000000 ext4            \
#      $lvmok{ }                               \
#      method{ format } format{ }              \
#      use_filesystem{ } filesystem{ ext4 }    \
#      mountpoint{ / }                         \
#      lv_name{ root }                         \
#    .                                         \
#    200% 200% 200% linux-swap                 \
#      $lvmok{ }                               \
#      method{ swap } format{ }                \
#      lv_name{ swap }                         \
#    .
# EOR

### Base system installation
d-i base-installer/install-recommends boolean true
d-i base-installer/kernel/image string linux-generic

### Apt setup
d-i apt-setup/restricted boolean true
d-i apt-setup/universe boolean true
d-i apt-setup/backports boolean true
d-i apt-setup/use_mirror boolean false
d-i apt-setup/services-select multiselect security, updates
d-i apt-setup/security_host string security.ubuntu.com
d-i apt-setup/security_path string /ubuntu

### Package selection
d-i tasksel/first multiselect none
d-i pkgsel/include string openssh-server python
d-i pkgsel/upgrade select full-upgrade
d-i pkgsel/update-policy select unattended-upgrades
d-i grub-installer/only_debian boolean true
d-i grub-installer/with_other_os boolean true

### Finishing up the installation
d-i preseed/late_command string \
 in-target sh -c 'lvremove -f --noudevsync main/placeholder || true'; \
 in-target sh -c 'sed -i "s/^#PermitRootLogin.*\$/PermitRootLogin prohibit-password/g" /etc/ssh/sshd_config'; \
 in-target sh -c 'mkdir -p --mode=0700 /root/.ssh && echo "###_SSH_AUTHORIZED_KEYS_###" > /root/.ssh/authorized_keys && chmod 0600 /root/.ssh/authorized_keys';  \
 in-target sh -c 'eject || true';
d-i debian-installer/splash boolean false
d-i cdrom-detect/eject boolean true

### Shutdown machine
d-i finish-install/reboot_in_progress note
d-i debian-installer/exit/poweroff boolean true
